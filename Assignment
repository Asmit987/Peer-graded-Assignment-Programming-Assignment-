ProgrammingAssignment2
R Programming week3 peer-graded assignment
Caching the Inverse of a Matrix:
Matrix inversion is usually a costly computation and there may be some
benefit to caching the inverse of a matrix rather than compute it repeatedly.
Below are a pair of functions that are used to create a special object that¶
stores a matrix and caches its inverse.

makeCacheMatrix cacheSolve <- function(x, ...) { 
Return a matrix that is the inverse of 'x' inv <- x
𝑔𝑒𝑡𝐼𝑛𝑣𝑒𝑟𝑠𝑒()𝑖𝑓(!𝑖𝑠.𝑛𝑢𝑙𝑙(𝑖𝑛𝑣))𝑚𝑒𝑠𝑠𝑎𝑔𝑒("𝑔𝑒𝑡𝑡𝑖𝑛𝑔𝑐𝑎𝑐ℎ𝑒𝑑𝑑𝑎𝑡𝑎")𝑟𝑒𝑡𝑢𝑟𝑛(𝑖𝑛𝑣)𝑚𝑎𝑡<−𝑥
getInverse()if(!is.null(inv))message("gettingcacheddata")return(inv)mat<−x
get() inv <- solve(mat, ...) x$setInverse(inv) inv }
